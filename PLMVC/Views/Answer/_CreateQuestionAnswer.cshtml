@model PLMVC.Models.Answer.AnswerViewModel
@Scripts.Render("~/bundles/jqueryval")
@using (Ajax.BeginForm("CreateQuestionAnswer", "Answer", new AjaxOptions { UpdateTargetId = "details_question_answers", HttpMethod = "POST" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model=>model.QuestionId)
        <div class="form-group">
            <label class="control-label col-md-2">
                @Resources.Resource.EnterAnswer
            </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsRight, htmlAttributes: new { @class = "control-label col-md-2" })
            <label class="control-label col-md-2">
                @Resources.Resource.IsRight
            </label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsRight)
                    @Html.ValidationMessageFor(model => model.IsRight, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@Resources.Resource.Create class="btn btn-default" />
            </div>
        </div>
    </div>
}

